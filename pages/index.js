import Head from 'next/head'
import { useState, useEffect } from "react";
import Image from 'next/image'
import {
  Flex,
  Box,
  useColorModeValue,
  List,
  ListItem,
  ListIcon,
  OrderedList,
  UnorderedList,
  Spinner,
} from '@chakra-ui/react';
import verifyAuth from '@/services/verifyAuth'
import { setUser } from '@/slices/authSlice'
import { wrapper } from '../store/store'
import getCategory from 'hooks/getCategory'

export default function Home() {
  
  const { data: category, isLoading: fetchLoading , ...rest} = getCategory()

  const [dataCategory, setdataCategory] = useState(null);
  const [getfetchLoading, setFetchLoading] = useState(null);
  useEffect(() => {
    setdataCategory(category)
    setFetchLoading(fetchLoading)
  });
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box  >
      {!getfetchLoading ?
      (
        <Flex
          minH={'100vh'}
          align={'center'}
          justify={'center'}
          bg={useColorModeValue('gray.50', 'gray.800')}>
          <List spacing={3}>
          {dataCategory?.category.length > 0 ? dataCategory?.category?.map((item, index) => {
            return ( <ListItem key={index}>
              <ListIcon color='green.500' />
              {item?.cat_name}
            </ListItem>)
            }) : null }
          </List>
        </Flex>
       ) : (<Flex justify="center"><Spinner /></Flex> )}
      </Box>
    </>
  )
}


export const getServerSideProps = wrapper.getServerSideProps((store) => async ({ req, res }) => {

  const auth = await verifyAuth({ req, store })
  if (auth) {
    store.dispatch(setUser(auth))
    return { props: {} }
  } else {
    return {
      props: {},
      redirect: {
        source: '/login',
        destination: '/login',
        permanent: true
      }
    }
  }
})